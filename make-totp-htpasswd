#!/usr/bin/env python
"""Generate a time based htpasswd file.

Usage: make-totp-htpasswd <user-secret-path> <pass-secret-path> <htpasswd-path>

Arguments:

* user-secret-path: path to base32 secret key
* pass-secret-path: path to base32 secret key
* htpasswd-path: desired path for htpasswd

Note:

* A base32 secret key can be generated using make-totp-secret.
* Execute as a cron job to refresh htpasswd file.
"""
import shutil
import sys
import tempfile

import htpasswd
import pyotp


try:
    USER_SECRET_PATH = sys.argv[1]
    PASS_SECRET_PATH = sys.argv[2]
    HTPASSWD_PATH = sys.argv[3]
except IndexError:
    print(__doc__)
    exit(1)

with open(USER_SECRET_PATH) as f:
    user_secret = f.read().strip()

with open(PASS_SECRET_PATH) as f:
    pass_secret = f.read().strip()

with tempfile.NamedTemporaryFile('w') as t:
    with htpasswd.Basic(t.name) as h:
        h.add(pyotp.TOTP(user_secret).now(), pyotp.TOTP(pass_secret).now())
    t.flush()
    shutil.copy(t.name, HTPASSWD_PATH)
